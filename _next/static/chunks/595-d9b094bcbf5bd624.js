"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[595],{50116:(t,e,o)=>{o.d(e,{Zh:()=>i,gB:()=>l,ox:()=>s,pD:()=>d,xg:()=>g});var a=o(35317),n=o(77651),c=o(18490);let r="availability",l=async()=>{try{console.log("getFutureVacationDays: מתחיל לקבל ימי חופשה עתידיים מ-Firebase");let t=new Date;t.setHours(0,0,0,0);let e=a.Dc.fromDate(t),o=(0,a.P)((0,a.rJ)(n.db,r),(0,a._M)("date",">=",e),(0,a.My)("date","asc"));console.log("getFutureVacationDays: שולח שאילתה ל-Firebase");let c=await (0,a.GG)(o);console.log("getFutureVacationDays: התקבלו ".concat(c.docs.length," ימי חופשה עתידיים מ-Firebase"));let l=c.docs.map(t=>{let e=t.data();console.log("getFutureVacationDays: יום חופשה ".concat(t.id,":"),e);let o=e.date instanceof a.Dc?e.date.toDate():e.date;return{id:t.id,...e,date:o}});return console.log("getFutureVacationDays: כל ימי החופשה העתידיים שהתקבלו:",l),l}catch(t){throw console.error("Error getting future vacation days:",t),t}},s=async t=>{try{console.log("isVacationDay: בודק אם התאריך ".concat(t.toDateString()," הוא יום חופשה"));let e=new Date(t);e.setHours(0,0,0,0);let o=new Date(t);o.setHours(23,59,59,999);let c=a.Dc.fromDate(e),l=a.Dc.fromDate(o),s=(0,a.P)((0,a.rJ)(n.db,r),(0,a._M)("date",">=",c),(0,a._M)("date","<=",l)),i=await (0,a.GG)(s);if(i.empty)return console.log("isVacationDay: התאריך ".concat(t.toDateString()," אינו יום חופשה")),{isVacationDay:!1};let d=i.docs[0].data();return console.log("isVacationDay: התאריך ".concat(t.toDateString()," הוא יום חופשה:"),d),{isVacationDay:!0,isFullDay:d.isFullDay,unavailableHours:d.unavailableHours||[]}}catch(e){throw console.error("Error checking if date ".concat(t.toDateString()," is a vacation day:"),e),e}},i=async t=>{try{console.log("addVacationDay: מתחיל להוסיף יום חופשה חדש עם הנתונים:",t);let e=(0,c.A)(t.date,"yyyy-MM-dd"),o={...t,date:a.Dc.fromDate(t.date),createdAt:a.Dc.now(),updatedAt:a.Dc.now()};console.log("addVacationDay: נתוני יום החופשה לאחר הוספת מטא-דאטה:",o);let l=(0,a.H9)(n.db,r,e);return await (0,a.BN)(l,o),console.log("addVacationDay: יום חופשה נוצר בהצלחה עם ID: ".concat(e)),{id:e,...o}}catch(t){throw console.error("Error adding vacation day:",t),t}},d=async(t,e)=>{try{console.log("updateVacationDay: מתחיל לעדכן יום חופשה עם ID: ".concat(t)),console.log("updateVacationDay: נתוני העדכון:",e);let o={...e,updatedAt:a.Dc.now()};e.date&&(o.date=a.Dc.fromDate(e.date)),console.log("updateVacationDay: נתוני העדכון המוכנים:",o);let c=(0,a.H9)(n.db,r,t);return await (0,a.mZ)(c,o),console.log("updateVacationDay: יום חופשה עם ID: ".concat(t," עודכן בהצלחה")),t}catch(t){throw console.error("updateVacationDay: שגיאה בעדכון יום חופשה:",t),t}},g=async t=>{try{console.log("deleteVacationDay: מתחיל למחוק יום חופשה עם ID: ".concat(t));let e=(0,a.H9)(n.db,r,t);return await (0,a.kd)(e),console.log("deleteVacationDay: יום חופשה נמחק בהצלחה עם ID: ".concat(t)),{id:t}}catch(e){throw console.error("Error deleting vacation day with ID: ".concat(t,":"),e),e}}},77651:(t,e,o)=>{o.d(e,{db:()=>l,j:()=>s});var a=o(23915),n=o(35317),c=o(16203);let r=(0,a.Wp)({apiKey:"AIzaSyDWNHL-dQZayHhVS51U1z_0u1V1uLKtzkA",authDomain:"barber-booking-bf41f.firebaseapp.com",projectId:"barber-booking-bf41f",storageBucket:"barber-booking-bf41f.firebasestorage.app",messagingSenderId:"265481537358",appId:"1:265481537358:web:93c5b6f36e8258dc5e401f"}),l=(0,n.aU)(r),s=(0,c.xI)(r)},89618:(t,e,o)=>{o.d(e,{CQ:()=>l,H8:()=>s,Ih:()=>d,d3:()=>i,gG:()=>r});var a=o(35317),n=o(77651);let c="appointments",r=async t=>{try{console.log("createAppointment: מתחיל ליצור תור חדש עם הנתונים:",t);let e={...t,status:"pending",createdAt:a.Dc.now(),updatedAt:a.Dc.now()};console.log("createAppointment: נתוני התור לאחר הוספת מטא-דאטה:",e);let o=await (0,a.gS)((0,a.rJ)(n.db,c),e);return console.log("createAppointment: תור נוצר בהצלחה עם ID: ".concat(o.id)),{id:o.id,...e}}catch(t){throw console.error("Error creating appointment:",t),t}},l=async t=>{try{console.log("getAppointmentsByDate: מתחיל לקבל תורים לתאריך ".concat(t.toDateString()));let e=new Date(t);e.setHours(0,0,0,0);let o=new Date(t);o.setHours(23,59,59,999);let r=a.Dc.fromDate(e),l=a.Dc.fromDate(o);console.log("getAppointmentsByDate: מחפש תורים בין ".concat(e.toISOString()," ל-").concat(o.toISOString()));let s=(0,a.P)((0,a.rJ)(n.db,c),(0,a._M)("date",">=",r),(0,a._M)("date","<=",l));console.log("getAppointmentsByDate: שולח שאילתה ל-Firebase");let i=await (0,a.GG)(s);console.log("getAppointmentsByDate: התקבלו ".concat(i.docs.length," תורים לתאריך ").concat(t.toDateString()));let d=i.docs.map(t=>{let e=t.data();return console.log("getAppointmentsByDate: תור ".concat(t.id,":"),e),{id:t.id,...e}}).filter(t=>"pending"===t.status||"approved"===t.status);return console.log("getAppointmentsByDate: כל התורים לתאריך ".concat(t.toDateString(),":"),d),d}catch(e){throw console.error("Error getting appointments for date ".concat(t.toDateString(),":"),e),e}},s=async(t,e)=>{try{let o=(0,a.H9)(n.db,c,t);return await (0,a.mZ)(o,{status:e,updatedAt:a.Dc.now()}),{id:t,status:e}}catch(t){throw console.error("Error updating appointment status:",t),t}},i=async t=>{try{let e=(0,a.H9)(n.db,c,t);return await (0,a.kd)(e),{id:t}}catch(t){throw console.error("Error deleting appointment:",t),t}},d=async()=>{try{console.log("getAllAppointmentsFromAllCollections: מתחיל לקבל את כל התורים מכל הקולקציות");let t=[];for(let e of["appointments","bookings","orders","reservations"])try{console.log("getAllAppointmentsFromAllCollections: בודק קולקציה: ".concat(e));let o=(0,a.P)((0,a.rJ)(n.db,e),(0,a.My)("date","asc")),c=await (0,a.GG)(o);console.log("getAllAppointmentsFromAllCollections: נמצאו ".concat(c.docs.length," מסמכים בקולקציה ").concat(e)),c.forEach(e=>{let o;let n=e.data();o=n.date?n.date instanceof a.Dc?n.date.toDate():n.date.seconds?new a.Dc(n.date.seconds,n.date.nanoseconds).toDate():new Date(n.date):new Date,t.push({id:e.id,date:o,time:n.time||"",service:n.service||"",people:n.people||1,notificationMethod:n.notificationMethod||"whatsapp",name:n.name||"",phone:n.phone||"",email:n.email||"",notes:n.notes||"",status:n.status||"pending",createdAt:n.createdAt,updatedAt:n.updatedAt})})}catch(t){console.error("getAllAppointmentsFromAllCollections: שגיאה בקבלת תורים מקולקציה ".concat(e,":"),t)}return console.log('getAllAppointmentsFromAllCollections: סה"כ נמצאו '.concat(t.length," תורים מכל הקולקציות")),t.sort((t,e)=>t.date.getTime()-e.date.getTime()),t}catch(t){throw console.error("getAllAppointmentsFromAllCollections: שגיאה בקבלת כל התורים מכל הקולקציות:",t),t}}}}]);